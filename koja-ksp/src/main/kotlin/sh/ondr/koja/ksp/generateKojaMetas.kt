package sh.ondr.koja.ksp

import com.google.devtools.ksp.processing.Dependencies
import sh.ondr.koja.KojaMeta

fun KojaProcessor.generateKojaMeta(
	fqName: String,
	kdoc: KojaMeta,
) {
	val propertyName = fqName.toCamelCase().replaceFirstChar { it.lowercase() } + "KojaMeta"
	val file = codeGenerator.createNewFile(
		dependencies = Dependencies(
			aggregating = true,
			sources = originatingFiles.toTypedArray(),
		),
		packageName = kojaMetaPackage,
		fileName = propertyName,
	)

	val code = buildString {
		appendLine("// Generated by Koja")
		appendLine("package $kojaMetaPackage")
		appendLine()
		appendLine("val $propertyName =")
		appendLine("  \"${fqName.escapeForKotlinString()}\" to sh.ondr.koja.KojaMeta(")
		appendLine("    description = \"${kdoc.description?.escapeForKotlinString()}\",")
		appendLine("    parameterDescriptions = mapOf(")
		appendLine("      ${kdoc.parameterDescriptions.entries.joinToString(",\n      ") { "\"${it.key.escapeForKotlinString()}\" to \"${it.value.escapeForKotlinString()}\"" }}")
		appendLine("    )")
		appendLine("  )")
	}

	file.write(code.toByteArray())
	file.close()
}
